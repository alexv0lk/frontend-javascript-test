{"version":3,"sources":["Row/Row.js","Table/Table.js","ChoiseButtons/ChoiseButtons.js","NextPrev/NextPrev.js","ActiveRow/ActiveRow.js","AddRow/AddRow.js","FilterRow/FilterRow.js","App.js","reportWebVitals.js","index.js"],"names":["Row","renderItems","this","props","error","items","choiseData","page","maxRow","length","renderItemsArray","startNumber","finishNumber","i","Math","ceil","slice","push","console","log","colSpan","message","map","item","onClick","setActiveRow","id","firstName","lastName","email","phone","UUID","v4","React","Component","Table","className","sortItem","ChoiseButtons","loadedMin","loadedBig","setChoiseData","NextPrev","changePage","ActiveRow","activeRow","value","description","readOnly","address","streetAddress","city","state","zip","AddRow","handleChange","event","name","target","setState","document","forms","form","checkValidity","querySelector","removeAttribute","setAttribute","handleSubmit","preventDefault","addRow","reset","onSubmit","type","pattern","required","onChange","disabled","FilterRow","str","filterItem","App","filterItems","filtredItems","concatItems","reg","RegExp","minData","bigData","filterID","filter","obj","test","filterFN","filterLN","filterEM","filterPH","concat","index","indexOf","sortItems","spanId","spanFn","spanLn","spanEm","spanPh","arrowDown","String","fromCharCode","arrowUp","flagsObject","p","e","f","l","textContent","reverse","sort","a","b","toUpperCase","dir","choise","bidData","fetch","then","res","json","err","classList","toggle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3077509c.chunk.js","sourcesContent":["\r\nimport UUID from 'node-uuid';\r\nimport React from 'react';\r\n\r\nclass Row extends React.Component{\r\n    \r\n\r\n  \r\n\r\n    \r\n    render() {\r\n        const { error, items, choiseData, page, maxRow } = this.props;\r\n        let renderItems\r\n        if(items.length > maxRow){\r\n            let renderItemsArray =[];\r\n            let startNumber = 0;\r\n            let finishNumber = maxRow;\r\n            for(let i=0; i < Math.ceil(items.length/maxRow); i++){\r\n                let page = items.slice(startNumber,finishNumber);\r\n                renderItemsArray.push(page);\r\n                startNumber +=maxRow;\r\n                finishNumber +=maxRow;  \r\n            }\r\n            renderItems = renderItemsArray[page];\r\n            console.log(renderItems)\r\n        } else {\r\n            renderItems = items;\r\n        }\r\n\r\n        if  (choiseData === null){\r\n            return  <>\r\n                    <tr>\r\n                        <th colSpan=\"5\">Нажмите minData для вывода малого объема данных</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th colSpan=\"5\">Либо bigData для вывода большого объема данных</th>\r\n                    </tr>\r\n                    </>;\r\n                        \r\n                    \r\n        }  else {\r\n            if (error) {\r\n                return <tr><th colSpan=\"5\">Ошибка: {error.message}</th></tr>;\r\n            } else {\r\n                return (\r\n                    <>\r\n                        {renderItems.map((item) => (\r\n                            <tr key={UUID.v4()} onClick={ () => {this.props.setActiveRow(item)}}>\r\n                                <td>{item.id}</td>\r\n                                <td>{item.firstName}</td>\r\n                                <td>{item.lastName}</td>\r\n                                <td>{item.email}</td>\r\n                                <td>{item.phone}</td>\r\n                            </tr>\r\n                        \r\n                        ))}\r\n                    </>\r\n                    \r\n                );\r\n            }\r\n        }\r\n      }\r\n    }\r\nexport default Row;","import React from 'react';\r\nimport Row from \"../Row/Row\";\r\n\r\n\r\nclass Table extends React.Component{\r\n    render(){\r\n        return (\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <td onClick={() => this.props.sortItem('id')}>\r\n                    <button >id</button>\r\n                    <span className=\"span-id\"></span>\r\n                  </td>\r\n                  <td onClick={() => this.props.sortItem('firstName')}>\r\n                    <button >firstName</button>\r\n                    <span className=\"span-fn\"></span>\r\n                  </td>\r\n                  <td onClick={() => this.props.sortItem('lastName')}> \r\n                    <button >lastName</button>\r\n                    <span className=\"span-ln\"></span>\r\n                  </td>\r\n                  <td onClick={() => this.props.sortItem('email')}>\r\n                    <button >email</button>\r\n                    <span className=\"span-em\"></span>\r\n                  </td>\r\n                  <td onClick={() => this.props.sortItem('phone')}>\r\n                    <button >phone</button>\r\n                    <span className=\"span-ph\"></span>\r\n                  </td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <Row \r\n                    choiseData={this.props.choiseData} \r\n                    items={this.props.items} \r\n                    error={this.props.error} \r\n                    page={this.props.page}\r\n                    maxRow={this.props.maxRow}\r\n                    setActiveRow={this.props.setActiveRow}\r\n                />\r\n              </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nexport default\r\nclass ChoiseButtons extends React.Component{\r\n\r\n    render(){\r\n        if(!this.props.loadedMin || !this.props.loadedBig ){\r\n            return <div className=\"button-container\">\r\n                    <p>Идет загрузка данных...</p>\r\n                    </div>\r\n        } else if(this.props.choiseData === null){\r\n\r\n            return(\r\n                <div className=\"button-container\">\r\n                <button className=\"choise-button\" onClick={ () => {this.props.setChoiseData(\"min\")} }>minData</button>\r\n                <button className=\"choise-button\" onClick={ () => {this.props.setChoiseData(\"big\")} }>bigData</button>\r\n                </div>\r\n            ) \r\n        } else {\r\n            return (\r\n                <div className=\"button-container\">\r\n                    <p>выбрано: {this.props.choiseData} колличество данных</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default\r\nclass NextPrev extends React.Component{\r\n\r\n    render(){\r\n            return(\r\n                <div className=\"next-prev-container\">\r\n                    <button className=\"choise-button\" onClick={ () => {this.props.changePage(false)} }>Назад</button>\r\n                    <button className=\"choise-button\" onClick={ () => {this.props.changePage(true)} }>Вперед</button>\r\n                    <p>{this.props.page+1}</p>\r\n                </div>\r\n            ) \r\n        }\r\n}","\r\nimport React from 'react';\r\n\r\nexport default\r\nclass ActiveRow extends React.Component{\r\n    \r\n\r\n    render(){\r\n        if(this.props.activeRow === null){\r\n            return <p>выбери ряд для вывода полной информации</p>\r\n        } else {\r\n            return (\r\n                <>  \r\n                Выбран пользователь <b>{this.props.activeRow.firstName+\" \"+this.props.activeRow.lastName}</b><br></br>\r\n                Описание:<br></br>\r\n                <textarea value={this.props.activeRow.description} readOnly/><br></br>\r\n                Адрес проживания: <b>{this.props.activeRow.address.streetAddress}</b><br></br>\r\n                Город: <b>{this.props.activeRow.address.city}</b><br></br>\r\n                Провинция/штат: <b>{this.props.activeRow.address.state}</b><br></br>\r\n                Индекс: <b>{this.props.activeRow.address.zip}</b>\r\n                    \r\n                   \r\n                </>\r\n        )}\r\n    }\r\n}","\r\nimport React from 'react';\r\n\r\nexport default\r\nclass AddRow extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                    id: '',\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                    phone: '',\r\n                    address:{streetAddress:'нет информации'},\r\n                    description: 'нет информации'\r\n            \r\n        }   \r\n    }\r\n\r\n    handleChange = (event) => { \r\n        let name = event.target.name; \r\n            this.setState(() => {\r\n                return {\r\n                            [name]: event.target.value\r\n                        \r\n                }\r\n            });  \r\n        if(!document.forms.form.checkValidity()){\r\n            document.querySelector('.input-submit').setAttribute('disabled', true);\r\n        } else {\r\n            document.querySelector('.input-submit').removeAttribute('disabled');\r\n        }\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.addRow(this.state);\r\n        document.forms.form.reset();\r\n        this.props.sortItem(null);\r\n\r\n      }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <form name='form' className=\"form\" onSubmit={this.handleSubmit}>\r\n                <span> только цифры</span>\r\n                <label >id\r\n                    <input name=\"id\" type=\"number\" pattern=\"\\d+\"  required onChange={this.handleChange}/>\r\n                    \r\n                </label>\r\n                <span> только латиница</span>\r\n                <label >firstName\r\n                    <input name=\"firstName\" type=\"text\" pattern=\"[A-Za-z]+\" required onChange={this.handleChange}/>\r\n                </label>\r\n                <span> только латиница</span>\r\n                <label>lastName\r\n                    <input name=\"lastName\" type=\"text\" pattern=\"[A-Za-z]+\" required onChange={this.handleChange}/>\r\n                </label>\r\n                <span> формат: xxx@xxx.xx</span>\r\n                <label>email\r\n                    <input name=\"email\" type=\"email\" pattern=\"\\w+@\\w+\\.[a-z]+\" required onChange={this.handleChange}/>\r\n                </label>  \r\n                <span> формат: (xxx)xxx-xxxx</span>  \r\n                <label>phone\r\n                    <input name=\"phone\" type=\"tel\" pattern=\"\\(\\d{3}\\)\\d{3}-\\d{4}\" required onChange={this.handleChange}/>\r\n                </label>\r\n                <input  className=\"input-submit\" type=\"submit\" disabled={true} value=\"Добавить в таблицу\"/>\r\n            </form>\r\n        \r\n        )}\r\n}","import React from 'react';\r\n\r\nexport default\r\nclass FilterRow extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            str:''\r\n        }   \r\n    }\r\n\r\n    handleChange = (event) => { \r\n            this.setState(() => {\r\n                return {\r\n                    str: event.target.value\r\n                }\r\n            });  \r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.filterItem(this.state.str);\r\n        this.props.sortItem(null);\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" onChange={this.handleChange}></input>\r\n                <input type=\"submit\" value=\"Найти\"></input>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from \"react\";\nimport './App.css';\nimport Table from \"./Table/Table\";\nimport ChoiseButtons from './ChoiseButtons/ChoiseButtons';\nimport NextPrev from './NextPrev/NextPrev';\nimport ActiveRow from './ActiveRow/ActiveRow';\nimport AddRow from './AddRow/AddRow';\nimport FilterRow from './FilterRow/FilterRow';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        choiseData: null,\n        error: null,\n        loadedBig: false,\n        loadedMin: false,\n        items: [],\n        minData: [],\n        bidData: [],\n        page: 0,\n        maxRow: 50, \n        activeRow: null,\n        flagsObject: {i:0,p:0,e:0,f:0,l:0}\n       \n    };\n  }\n\n  filterItem = (str) => {\n    let filterItems;\n    let filtredItems;\n    let concatItems;\n    const reg = new RegExp(str, 'i');\n    if(this.state.choiseData === 'min'){\n      filterItems = this.state.minData\n    }else if(this.state.choiseData === 'big'){\n      filterItems = this.state.bigData\n    }\n    if(str === ''){\n      filtredItems = filterItems\n    } else{\n      let filterID = filterItems.filter((obj)=>{\n        return reg.test(obj['id']);\n      });\n      let filterFN = filterItems.filter((obj)=>{\n        return reg.test(obj['firstName']);\n      });\n      let filterLN = filterItems.filter((obj)=>{\n        return reg.test(obj['lastName']);\n      });\n      let filterEM = filterItems.filter((obj)=>{\n        return reg.test(obj['email']);\n      });\n      let filterPH = filterItems.filter((obj)=>{\n          return reg.test(obj['phone']);\n      });\n      concatItems = filterID.concat(filterFN,filterLN,filterEM,filterPH);\n      \n      filtredItems = concatItems.filter((item, index) =>{\n        return concatItems.indexOf(item) === index;\n      });\n      \n    }\n    if(this.state.choiseData !== null){\n      this.setState(() => {\n        return {items: filtredItems}\n      })\n    }\n    \n\n  }\n\n  sortItem = (type) =>{\n    let sortItems = this.state.items;\n\n    // переменные для отображение стрелочек сортировки\n    const spanId = document.querySelector('.span-id');\n    const spanFn = document.querySelector('.span-fn');\n    const spanLn = document.querySelector('.span-ln');\n    const spanEm = document.querySelector('.span-em');\n    const spanPh = document.querySelector('.span-ph');\n    const arrowDown = String.fromCharCode(8595);\n    const arrowUp = String.fromCharCode(8593);\n\n    if(type === null ){\n    \n      this.setState(() => {\n        return {flagsObject:{i:0,p:0,e:0,f:0,l:0}}\n      })\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n    }\n\n    //логика сортировки\n    //получаем объект Table и используем незанятые его свойства для \"флажков\"\n\n    if(type === \"id\" && this.state.items.length > 1){\n      if(this.state.flagsObject.i){\n        sortItems.reverse();\n        if(this.state.flagsObject.i%2){\n            spanId.textContent = arrowUp;\n        }else{spanId.textContent = arrowDown;}\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{i:this.state.flagsObject.i+1,p:0,e:0,f:0,l:0}}\n        })\n      }else{\n        sortItems.sort((a,b) => a.id - b.id);\n        spanId.textContent = arrowDown;\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{i:1,p:0,e:0,f:0,l:0}}\n        })\n      }\n    } else if(type === \"firstName\" && this.state.items.length > 1){\n      if(this.state.flagsObject.f){\n        sortItems.reverse();\n        if(this.state.flagsObject.f%2){\n          spanFn.textContent = arrowUp;\n        }else{spanFn.textContent = arrowDown;}\n        spanId.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{f:this.state.flagsObject.f+1,p:0,e:0,i:0,l:0}}\n        })\n      }else{\n        sortItems.sort((a,b) => {\n          if ( a.firstName.toUpperCase() < b.firstName.toUpperCase() ) return -1;\n        });\n        spanFn.textContent = arrowDown;\n        spanId.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{f:1,p:0,e:0,i:0,l:0}}\n        })\n        \n      }\n    } else if(type === \"lastName\" && this.state.items.length > 1){\n      if(this.state.flagsObject.l){\n        sortItems.reverse();\n        if(this.state.flagsObject.l%2){\n          spanLn.textContent = arrowUp;\n        }else{spanLn.textContent = arrowDown;}\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{l:this.state.flagsObject.l+1,p:0,e:0,i:0,f:0}}\n        })\n        \n      }else{\n        sortItems.sort((a,b) => {\n          if ( a.lastName.toUpperCase() < b.lastName.toUpperCase() ) return -1;\n        });\n        spanLn.textContent = arrowDown;\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{l:1,p:0,e:0,i:0,f:0}}\n        })\n        \n      }\n    } else if(type === \"email\" && this.state.items.length > 1){\n      if(this.state.flagsObject.e){\n        sortItems.reverse();\n        if(this.state.flagsObject.e%2){\n          spanEm.textContent = arrowUp;\n        }else{spanEm.textContent = arrowDown;}\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanPh.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{e:this.state.flagsObject.e+1,p:0,l:0,i:0,f:0}}\n        })\n      }else{\n        sortItems.sort((a,b) => {\n          if ( a.email.toUpperCase() < b.email.toUpperCase() ) return -1;\n        });\n        spanEm.textContent = arrowDown;\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanPh.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{e:1,p:0,l:0,i:0,f:0}}\n        })\n        \n      }\n    } else if(type === \"phone\" && this.state.items.length > 1){\n      if(this.state.flagsObject.p){\n        sortItems.reverse();\n        if(this.state.flagsObject.p%2){\n          spanPh.textContent = arrowUp;\n        }else{spanPh.textContent = arrowDown;}\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{p:this.state.flagsObject.p+1,e:0,l:0,i:0,f:0}}\n        })\n      }else{\n        sortItems.sort((a,b) => a.phone.slice(1,4) - b.phone.slice(1,4));\n        spanPh.textContent = arrowDown;\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{p:1,e:0,l:0,i:0,f:0}}\n        })\n        \n      }\n    }\n\n   \n    if(type !== null){\n      this.setState(() => {\n        return {items: sortItems}\n      })\n    }\n    \n  }\n\n  addRow = item =>{\n    \n    this.setState(() => {\n        return {items: [item, ...this.state.items]}\n    })\n    \n  }\n\n  setActiveRow = item =>{\n    this.setState(() => {\n        return {activeRow: item}\n    })\n  }\n\n  changePage = dir => {\n    this.setState(() => {\n      // логика переключения страниц и \n      // установки максимального и минимального кол-ва страниц зависимое от количества рядов\n      if(dir){\n        if(this.state.page < Math.ceil(this.state.items.length/this.state.maxRow)-1){\n          return {\n            page: this.state.page +1\n          }\n        } else { \n          return {page: this.state.page}\n        }\n      } else {\n        if(this.state.page >0){\n          return {\n            page: this.state.page -1\n          }\n        } else {\n          return {page: this.state.page}\n        }\n        \n      }\n    })\n  }\n\n  setChoiseData = choise =>{\n    this.setState(() => {\n      \n      if(choise === \"min\"){\n        \n        return {\n          choiseData: choise,\n          items: this.state.minData\n          \n        }\n      } else if(choise === \"big\"){\n        \n        return {\n          choiseData: choise,\n          items: this.state.bigData\n        }\n      }\n     \n      \n    }) \n  }\n\n\n  componentDidMount(){\n    \n    fetch('https://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D')\n            .then(res => res.json())\n            .then(\n                (res) => {\n                    this.setState({\n                        loadedMin: true,\n                        minData: res\n                    })\n                },\n                (err) => {\n                    this.setState({\n                        loadedMin: true,\n                        error: err\n                    })\n                }\n            )\n    fetch('https://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D')\n            .then(res => res.json())\n            .then(\n                (res) => {\n                    this.setState({\n                        loadedBig: true,\n                        bigData: res\n                    })\n                },\n                (err) => {\n                    this.setState({\n                        loadedBig: true,\n                        error: err\n                    })\n                }\n            )    \n            \n            \n  }        \n  \n  render(){\n\n    return <div className=\"main-container\">\n            <ChoiseButtons \n              setChoiseData={this.setChoiseData}\n              loadedMin={this.state.loadedMin} \n              loadedBig={this.state.loadedBig}\n              choiseData={this.state.choiseData}\n            />\n            <NextPrev \n              changePage={this.changePage}\n              page={this.state.page}\n            />\n            <div className=\"top-bar\">\n              <FilterRow\n                  filterItem={this.filterItem}\n                  sortItem={this.sortItem}\n                />\n              <button className=\"add-button\"onClick={() =>{document.forms.form.classList.toggle('form-visible') }}>Добавить</button>\n            </div>\n            <div className=\"tableContainer\">\n              <Table \n                sortItem={this.sortItem}\n                setActiveRow={this.setActiveRow}\n                choiseData={this.state.choiseData} \n                items={this.state.items} \n                error={this.state.error} \n                page={this.state.page}\n                maxRow={this.state.maxRow}\n              />\n              \n              <AddRow\n                addRow={this.addRow}\n                sortItem={this.sortItem}\n              />\n            </div>\n            \n            <ActiveRow \n                activeRow={this.state.activeRow}\n              />\n           </div>;\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}