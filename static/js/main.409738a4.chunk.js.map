{"version":3,"sources":["Row/Row.js","Table/Table.js","ChoiseButtons/ChoiseButtons.js","NextPrev/NextPrev.js","ActiveRow/ActiveRow.js","AddRow/AddRow.js","FilterRow/FilterRow.js","App.js","reportWebVitals.js","index.js"],"names":["Row","renderItems","this","props","error","items","choiseData","page","maxRow","length","renderItemsArray","startNumber","finishNumber","i","Math","ceil","slice","push","colSpan","message","map","item","onClick","setActiveRow","id","firstName","lastName","email","phone","UUID","v4","React","Component","Table","className","sortItem","ChoiseButtons","loadedMin","loadedBig","setChoiseData","NextPrev","changePage","ActiveRow","activeRow","value","description","readOnly","address","streetAddress","city","state","zip","AddRow","handleChange","event","name","target","setState","document","forms","form","checkValidity","querySelector","removeAttribute","setAttribute","handleSubmit","preventDefault","reset","addRow","onSubmit","type","pattern","required","onChange","disabled","FilterRow","str","filterItem","App","filterItems","filtredItems","concatItems","reg","RegExp","minData","bigData","filterID","filter","obj","test","filterFN","filterLN","filterEM","filterPH","concat","index","indexOf","floor","sortItems","spanId","spanFn","spanLn","spanEm","spanPh","arrowDown","String","fromCharCode","arrowUp","flagsObject","p","e","f","l","textContent","reverse","sort","a","b","toUpperCase","dir","choise","bidData","fetch","then","res","json","err","classList","toggle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.409738a4.chunk.js","sourcesContent":["\r\nimport UUID from 'node-uuid';\r\nimport React from 'react';\r\n\r\nexport default\r\nclass Row extends React.Component{\r\n   \r\n    render() {\r\n        const { error, items, choiseData, page, maxRow } = this.props;\r\n        let renderItems\r\n\r\n        if ( items.length > maxRow ) {\r\n\r\n            let renderItemsArray =[];\r\n\r\n            let startNumber = 0;\r\n            let finishNumber = maxRow;\r\n\r\n            for(let i=0; i < Math.ceil( items.length / maxRow ); i++){\r\n                \r\n                let page = items.slice( startNumber , finishNumber );\r\n                renderItemsArray.push( page );\r\n\r\n                startNumber += maxRow;\r\n                finishNumber += maxRow;  \r\n            }\r\n            renderItems = renderItemsArray[page];\r\n        } else {\r\n            renderItems = items;\r\n        }\r\n\r\n        if ( choiseData === null ){\r\n\r\n            return  <>\r\n                    <tr>\r\n                        <th colSpan = \"5\">Нажмите minData для вывода малого объема данных</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th colSpan = \"5\">Либо bigData для вывода большого объема данных</th>\r\n                    </tr>\r\n                    </>;  \r\n\r\n        }  else {\r\n\r\n            if ( error ) {\r\n\r\n                return <tr><th colSpan = \"5\">Ошибка: { error.message }</th></tr>;\r\n\r\n            } else {\r\n\r\n                return (\r\n                    <>\r\n                        {renderItems.map(( item ) => (\r\n                            <tr key={UUID.v4()} onClick={ () => { this.props.setActiveRow( item ) }}>\r\n                                <td>{ item.id }</td>\r\n                                <td>{ item.firstName }</td>\r\n                                <td>{ item.lastName }</td>\r\n                                <td>{ item.email }</td>\r\n                                <td>{ item.phone }</td>\r\n                            </tr>\r\n                        \r\n                        ))}\r\n                    </> \r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Row from \"../Row/Row\";\r\n\r\nexport default\r\nclass Table extends React.Component{\r\n    render(){\r\n        return (\r\n            <table className = \"table\">\r\n              <thead>\r\n                <tr>\r\n                  <td onClick = { () => this.props.sortItem('id') }>\r\n                    <button >id</button>\r\n                    <span className = \"span-id\"></span>\r\n                  </td>\r\n                  <td onClick = { () => this.props.sortItem('firstName') }>\r\n                    <button >firstName</button>\r\n                    <span className = \"span-fn\"></span>\r\n                  </td>\r\n                  <td onClick = { () => this.props.sortItem('lastName') }> \r\n                    <button >lastName</button>\r\n                    <span className = \"span-ln\"></span>\r\n                  </td>\r\n                  <td onClick = { () => this.props.sortItem('email') }>\r\n                    <button >email</button>\r\n                    <span className = \"span-em\"></span>\r\n                  </td>\r\n                  <td onClick = { () => this.props.sortItem('phone') }>\r\n                    <button >phone</button>\r\n                    <span className = \"span-ph\"></span>\r\n                  </td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <Row \r\n                    choiseData = { this.props.choiseData } \r\n                    items = { this.props.items } \r\n                    error = { this.props.error } \r\n                    maxRow = { this.props.maxRow }\r\n                    setActiveRow = { this.props.setActiveRow }\r\n                    page = { this.props.page }\r\n                />\r\n              </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default\r\nclass ChoiseButtons extends React.Component{\r\n\r\n    render(){\r\n        if ( !this.props.loadedMin || !this.props.loadedBig ){\r\n            return <div className = \"button-container\">\r\n                    <p>Идет загрузка данных...</p>\r\n                    </div>\r\n        } else if ( this.props.choiseData === null ){\r\n\r\n            return(\r\n                <div className = \"button-container\">\r\n                    <button className = \"choise-button\" onClick = { () => {this.props.setChoiseData(\"min\")} }>minData</button>\r\n                    <button className = \"choise-button\" onClick = { () => {this.props.setChoiseData(\"big\")} }>bigData</button>\r\n                </div>\r\n            ) \r\n        } else {\r\n            return (\r\n                <div className = \"button-container\">\r\n                    <p>выбрано: { this.props.choiseData } колличество данных</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default\r\nclass NextPrev extends React.Component{\r\n\r\n    render(){\r\n            return(\r\n                <div className = \"next-prev-container\">\r\n                    <button className = \"choise-button\" onClick = { () => { this.props.changePage( false ) } }>Назад</button>\r\n                    <button className = \"choise-button\" onClick = { () => { this.props.changePage( true ) } }>Вперед</button>\r\n                    <p>{ this.props.page + 1 } из  { Math.ceil( this.props.items.length / this.props.maxRow ) }</p>\r\n                </div>\r\n            ) \r\n        }\r\n}","import React from 'react';\r\n\r\nexport default\r\nclass ActiveRow extends React.Component{\r\n    \r\n\r\n    render(){\r\n        if ( this.props.activeRow === null ) {\r\n            return <p>выбери ряд для вывода полной информации</p>\r\n        } else {\r\n            return (\r\n                <>  \r\n                Выбран пользователь <b> { this.props.activeRow.firstName + \" \" + this.props.activeRow.lastName }</b><br></br>\r\n                Описание:<br></br>\r\n                <textarea value= { this.props.activeRow.description } readOnly/><br></br>\r\n                Адрес проживания: <b> { this.props.activeRow.address.streetAddress } </b><br></br>\r\n                Город: <b> { this.props.activeRow.address.city } </b><br></br>\r\n                Провинция/штат: <b> { this.props.activeRow.address.state } </b><br></br>\r\n                Индекс: <b> { this.props.activeRow.address.zip } </b>  \r\n                </>\r\n        )}\r\n    }\r\n}","\r\nimport React from 'react';\r\n\r\nexport default\r\nclass AddRow extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                    id: '',\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                    phone: '',\r\n                    address:{streetAddress:'нет информации'},\r\n                    description: 'нет информации'\r\n            \r\n        }   \r\n    }\r\n\r\n    handleChange = (event) => { \r\n        let name = event.target.name; \r\n            this.setState(() => {\r\n                return {\r\n                            [name]: event.target.value   \r\n                }\r\n            });  \r\n        if( !document.forms.form.checkValidity() ){\r\n            document.querySelector('.input-submit').setAttribute('disabled', true);\r\n        } else {\r\n            document.querySelector('.input-submit').removeAttribute('disabled');\r\n        }\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        document.forms.form.reset();\r\n\r\n        this.props.addRow( this.state );\r\n        this.props.sortItem( null );\r\n      }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <form name='form' className=\"form\" onSubmit= { this.handleSubmit }>\r\n\r\n                <span> только цифры</span>\r\n                <label >id\r\n                    <input name = \"id\" type=\"number\" pattern = \"\\d+\"  required onChange= { this.handleChange }/>\r\n                    \r\n                </label>\r\n\r\n                <span> только латиница</span>\r\n                <label >firstName\r\n                    <input name = \"firstName\" type = \"text\" pattern = \"[A-Za-z]+\" required onChange = { this.handleChange }/>\r\n                </label>\r\n\r\n                <span> только латиница</span>\r\n                <label>lastName\r\n                    <input name = \"lastName\" type = \"text\" pattern = \"[A-Za-z]+\" required onChange = { this.handleChange }/>\r\n                </label>\r\n\r\n                <span> формат: xxx@xxx.xx</span>\r\n                <label>email\r\n                    <input name = \"email\" type = \"email\" pattern = \"\\w+@\\w+\\.[a-z]+\" required onChange = { this.handleChange }/>\r\n                </label>  \r\n\r\n                <span> формат: (xxx)xxx-xxxx</span>  \r\n                <label>phone\r\n                    <input name = \"phone\" type = \"tel\" pattern = \"\\(\\d{3}\\)\\d{3}-\\d{4}\" required onChange = { this.handleChange }/>\r\n                </label>\r\n\r\n                <input  className = \"input-submit\" type = \"submit\" disabled = {true} value = \"Добавить в таблицу\"/>\r\n            </form>\r\n        \r\n        )}\r\n}","import React from 'react';\r\n\r\nexport default\r\nclass FilterRow extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            str:''\r\n        }   \r\n    }\r\n\r\n    handleChange = (event) => { \r\n            this.setState(() => {\r\n                return {\r\n                    str: event.target.value\r\n                }\r\n            });  \r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.filterItem( this.state.str );\r\n        this.props.sortItem( null );\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit = { this.handleSubmit }>\r\n                <input type = \"text\" onChange = { this.handleChange }></input>\r\n                <input type = \"submit\" value = \"Найти\"></input>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from \"react\";\n\nimport './App.css';\nimport Table from \"./Table/Table\";\nimport ChoiseButtons from './ChoiseButtons/ChoiseButtons';\nimport NextPrev from './NextPrev/NextPrev';\nimport ActiveRow from './ActiveRow/ActiveRow';\nimport AddRow from './AddRow/AddRow';\nimport FilterRow from './FilterRow/FilterRow';\n\nexport default\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        choiseData: null,\n        error: null,\n        loadedBig: false,\n        loadedMin: false,\n        items: [],\n        minData: [],\n        bidData: [],\n        page: 0,\n        maxRow: 50, \n        activeRow: null,\n        flagsObject: { i:0 , p:0 , e:0 , f:0 , l:0 }\n       \n    };\n  }\n\n  filterItem = (str) => {\n\n    let filterItems;\n    let filtredItems;\n    let concatItems;\n\n    const reg = new RegExp(str, 'i');\n\n    if ( this.state.choiseData === 'min' ){\n      filterItems = this.state.minData\n    } else if ( this.state.choiseData === 'big' ){\n      filterItems = this.state.bigData\n    }\n\n    if ( str === '' ){\n      filtredItems = filterItems\n    } else {\n\n      let filterID = filterItems.filter(( obj ) => {\n        return reg.test( obj['id'] );\n      });\n      let filterFN = filterItems.filter(( obj ) => {\n        return reg.test( obj['firstName'] );\n      });\n      let filterLN = filterItems.filter(( obj ) => {\n        return reg.test( obj['lastName'] );\n      });\n      let filterEM = filterItems.filter(( obj ) => {\n        return reg.test( obj['email'] );\n      });\n      let filterPH = filterItems.filter(( obj ) => {\n        return reg.test( obj['phone'] );\n      });\n      concatItems = filterID.concat( filterFN , filterLN , filterEM , filterPH );\n\n      // ниже убираю повторяющиеся элементы после фильтрации и concat\n      \n      filtredItems = concatItems.filter( ( item , index ) => {\n        return concatItems.indexOf( item ) === index;\n      });\n      \n    }\n\n    // Проверяю активную страницу, и если она больше длинны отфильтрованного массива, \n    // то устанавливаю максимальную страницу\n\n    if ( Math.ceil( filtredItems.length / this.state.maxRow ) <= this.state.page ) {\n      this.setState(() => {\n        return { page: Math.floor( filtredItems.length / this.state.maxRow ) }\n      })\n    }\n\n    if ( this.state.choiseData !== null ){\n      this.setState(() => {\n        return { items: filtredItems }\n      })\n    }\n    \n\n  }\n\n  sortItem = (type) =>{\n    let sortItems = this.state.items;\n\n    // переменные для отображение стрелочек сортировки\n    const spanId = document.querySelector('.span-id');\n    const spanFn = document.querySelector('.span-fn');\n    const spanLn = document.querySelector('.span-ln');\n    const spanEm = document.querySelector('.span-em');\n    const spanPh = document.querySelector('.span-ph');\n    const arrowDown = String.fromCharCode(8595);\n    const arrowUp = String.fromCharCode(8593);\n\n\n    // обнуляю состояние сортировки при  фильтрации\n    if ( type === null ){\n    \n      this.setState(() => {\n        return { flagsObject: { i:0 , p:0 , e:0 , f:0 , l:0 }}\n      })\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n    }\n\n    //логика сортировки и установки флажков\n\n    if ( type === \"id\" && this.state.items.length > 1 ){\n\n      if ( this.state.flagsObject.i ){\n        sortItems.reverse();\n\n        if ( this.state.flagsObject.i % 2 ){\n            spanId.textContent = arrowUp;\n\n        } else { spanId.textContent = arrowDown; }\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n        this.setState(() => {\n          return {flagsObject:{ i:this.state.flagsObject.i + 1 , p:0 , e:0 , f:0 , l:0} }\n        })\n\n      } else {\n        sortItems.sort(( a , b ) => a.id - b.id );\n\n        spanId.textContent = arrowDown;\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n\n        this.setState(() => {\n          return { flagsObject:{ i:1 , p:0 , e:0 , f:0 , l:0} }\n        })\n\n      }\n    } else if ( type === \"firstName\" && this.state.items.length > 1 ){\n\n      if ( this.state.flagsObject.f ){\n        sortItems.reverse();\n\n        if ( this.state.flagsObject.f % 2 ){\n          spanFn.textContent = arrowUp;\n\n        } else { spanFn.textContent = arrowDown; }\n        spanId.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n\n        this.setState(() => {\n          return { flagsObject: { f:this.state.flagsObject.f + 1 , p:0 , e:0 , i:0 , l:0 }}\n        })\n      }else{\n        sortItems.sort(( a , b ) => {\n          if ( a.firstName.toUpperCase() < b.firstName.toUpperCase() ) return -1;\n        });\n\n        spanFn.textContent = arrowDown;\n        spanId.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n\n        this.setState(() => {\n          return { flagsObject: { f:1 , p:0 , e:0 , i:0 , l:0 }}\n        }) \n      }\n    } else if ( type === \"lastName\" && this.state.items.length > 1 ){\n\n      if ( this.state.flagsObject.l ){\n        sortItems.reverse();\n\n        if ( this.state.flagsObject.l % 2){\n          spanLn.textContent = arrowUp;\n\n        } else { spanLn.textContent = arrowDown; }\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n\n        this.setState(() => {\n          return { flagsObject: { l:this.state.flagsObject.l + 1 , p:0 , e:0 , i:0 , f:0 }}\n        })\n        \n      } else {\n        sortItems.sort(( a , b ) => {\n          if ( a.lastName.toUpperCase() < b.lastName.toUpperCase() ) return -1;\n        });\n\n        spanLn.textContent = arrowDown;\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanEm.textContent = \"\";\n        spanPh.textContent = \"\";\n\n        this.setState(() => {\n          return { flagsObject: { l:1 , p:0 , e:0 , i:0 , f:0 }}\n        })\n      }\n    } else if ( type === \"email\" && this.state.items.length > 1 ){\n\n      if ( this.state.flagsObject.e ){\n        sortItems.reverse();\n\n        if ( this.state.flagsObject.e % 2 ){\n          spanEm.textContent = arrowUp;\n\n        } else { spanEm.textContent = arrowDown; }\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanPh.textContent = \"\";\n\n        this.setState(() => {\n          return { flagsObject:{ e:this.state.flagsObject.e + 1 , p:0 , l:0 , i:0 , f:0 }}\n        })\n\n      } else {\n        sortItems.sort(( a , b ) => {\n          if ( a.email.toUpperCase() < b.email.toUpperCase() ) return -1;\n        });\n\n        spanEm.textContent = arrowDown;\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanPh.textContent = \"\";\n\n        this.setState(() => {\n          return { flagsObject: { e:1 , p:0 , l:0 , i:0 , f:0 }}\n        })\n        \n      }\n    } else if ( type === \"phone\" && this.state.items.length > 1 ){\n      if ( this.state.flagsObject.p ){\n        sortItems.reverse();\n\n        if ( this.state.flagsObject.p % 2 ){\n          spanPh.textContent = arrowUp;\n\n        } else { spanPh.textContent = arrowDown; }\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n\n        this.setState(() => {\n          return { flagsObject: { p:this.state.flagsObject.p + 1 , e:0 , l:0 , i:0 , f:0 }}\n        })\n\n      } else {\n        sortItems.sort(( a , b ) => a.phone.slice( 1 , 4 ) - b.phone.slice( 1 , 4 ));\n\n        spanPh.textContent = arrowDown;\n        spanId.textContent = \"\";\n        spanFn.textContent = \"\";\n        spanLn.textContent = \"\";\n        spanEm.textContent = \"\";\n\n        this.setState(() => {\n          return { flagsObject: { p:1 , e:0 , l:0 , i:0 , f:0 }}\n        })\n        \n      }\n    }\n\n   \n    if ( type !== null ){\n      this.setState(() => {\n        return { items: sortItems }\n      })\n    }\n    \n  }\n\n  addRow = item =>{\n    \n    this.setState(() => {\n        return {items: [item, ...this.state.items]}\n    })\n    \n    if ( this.state.choiseData === 'min' ){\n      this.setState(() => {\n        return {minData: [item, ...this.state.minData]}\n      })\n    } else if ( this.state.choiseData === 'big' ){\n      this.setState(() => {\n        return {bigData: [item, ...this.state.bigData]}\n      })\n    }\n    \n  }\n\n  setActiveRow = item =>{\n    this.setState(() => {\n        return { activeRow: item }\n    })\n  }\n\n  changePage = dir => {\n    this.setState(() => {\n      // логика переключения страниц и \n      // установки максимального и минимального кол-ва страниц зависимое от количества рядов\n      if ( dir ) {\n        return this.state.page < Math.ceil( this.state.items.length / this.state.maxRow ) - 1 ? \n          { page: this.state.page + 1 } : { page: this.state.page }\n           \n      } else {\n        return this.state.page > 0 ? \n          { page: this.state.page - 1 } : { page: this.state.page }\n\n      }\n    })\n  }\n\n  setChoiseData = choise =>{\n    this.setState(() => {\n      \n      if(choise === \"min\"){\n        \n        return {\n          choiseData: choise,\n          items: this.state.minData\n          \n        }\n      } else if(choise === \"big\"){\n        \n        return {\n          choiseData: choise,\n          items: this.state.bigData\n        }\n      }\n     \n      \n    }) \n  }\n\n\n  componentDidMount(){\n    \n    fetch('https://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D')\n            .then(res => res.json())\n            .then(\n                (res) => {\n                    this.setState({\n                        loadedMin: true,\n                        minData: res\n                    })\n                },\n                (err) => {\n                    this.setState({\n                        loadedMin: true,\n                        error: err\n                    })\n                }\n            )\n    fetch('https://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D')\n            .then(res => res.json())\n            .then(\n                (res) => {\n                    this.setState({\n                        loadedBig: true,\n                        bigData: res\n                    })\n                },\n                (err) => {\n                    this.setState({\n                        loadedBig: true,\n                        error: err\n                    })\n                }\n            )    \n            \n            \n  }        \n  \n  render(){\n\n    return <div className = \"main-container\">\n            <ChoiseButtons \n              setChoiseData = { this.setChoiseData }\n              loadedMin = { this.state.loadedMin } \n              loadedBig = { this.state.loadedBig }\n              choiseData = { this.state.choiseData }\n            />\n            <NextPrev \n              changePage = { this.changePage }\n              page = { this.state.page }\n              items = { this.state.items }\n              maxRow = { this.state.maxRow }\n            />\n            <div className = \"top-bar\">\n              <FilterRow\n                  filterItem = { this.filterItem }\n                  sortItem = { this.sortItem }\n                />\n              <button className = \"add-button\" onClick = {() => { document.forms.form.classList.toggle('form-visible') }}>Добавить</button>\n            </div>\n            <div className = \"tableContainer\">\n              <Table \n                sortItem = { this.sortItem }\n                setActiveRow = { this.setActiveRow }\n                choiseData = { this.state.choiseData } \n                items = { this.state.items } \n                error = { this.state.error } \n                page = { this.state.page }\n                maxRow = { this.state.maxRow }\n              />\n              \n              <AddRow\n                addRow = { this.addRow }\n                sortItem = { this.sortItem }\n              />\n            </div>\n            \n            <ActiveRow \n                activeRow = { this.state.activeRow }\n              />\n           </div>;\n  }\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}